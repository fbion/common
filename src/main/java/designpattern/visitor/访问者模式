定义：访问者模式即表示一个作用于某对象结构中的各元素的操作，它使我们可以在不改变各元素的类的前提下定义作用于这些元素的新操作。

应用场景：
    1、对象结构中对象对应的类很少改变，但经常需要在此对象结构上定义新的操作。
    2、需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免让这些操作“污染”这些对象的类，也不希望在增加新操作时修改这些类。

使用目的： 访问者模式的目的是封装一些施加于某种数据结构元素之上的操作，一旦这些操作需要修改的话，接受这个操作的数据结构可以保持不变。
为不同类型的元素提供多种访问操作方式，且可以在不修改原有系统的情况下增加新的操作方式，这就是访问者模式的模式动机。

优点：
    1、使得新增新的访问操作变得更加简单。
    2、能够使得用户在不修改现有类的层次结构下，定义该类层次结构的操作。
    3、将有关元素对象的访问行为集中到一个访问者对象中，而不是分散搞一个个的元素类中。

缺点：
    1、增加新的元素类很困难。在访问者模式中，每增加一个新的元素类都意味着要在抽象访问者角色中增加一个新的抽象操作，并在每一个具体访问者类中增加相应的具体操作，违背了“开闭原则”的要求。
    2、破坏封装。当采用访问者模式的时候，就会打破组合类的封装。
    3、比较难理解。貌似是最难的设计模式了。