定义：适对已经存在的某些类进行装饰，以此来扩展一些功能。

应用场景：
    1、扩展一个类的功能。
    2、动态增加功能，动态撤销。

实现要点：
    1、装饰者和被装饰者必须有共同的父类。
    2、一般情况下，被装饰者中有装饰者（或者他们共同的父类）的引用，通过构造函数来实现。
    3、适配器需要实现另一个接口，而装饰器是实现同一个接口。

模式中的角色：
    Component抽象构件角色：真实对象和装饰对象有相同的接口。这样，客户端对象就能够以与真实对象相同的方式同装饰对象交互。
    ConcreteComponent具体构件角色（真实对象）：io流中的FileInputStream、FileOutputStream
    Decorator装饰角色：持有一个抽象构件的引用。装饰对象接受所有客户端的请求，并把这些请求转发给真实的对象。这样，就能在真实对象调用前后增加新的功能。
    ConcreteDecorator具体装饰角色：负责给构件对象增加新的责任。

优点：
    1、扩展对象功能，比继承灵活，不会导致类个数急剧增加。
    2、可以对一个对象进行多次装饰，创造出不同行为的组合，得到功能更加强大的对象。
    3、具体构建类和具体装饰类可以独立变化，用户可以根据需要自己增加新的具体构件子类和具体装饰子类。

缺点：
    1、产生很多小对象。大量小对象占据内存，一定程度上影响性能。
    2、饰模式易于出错，调试排查比较麻烦。